# -*- coding: utf-8 -*-
"""Iris Dataset Predictor.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1DUm81Bi6WvzSETwuB1Ou1nBeABObALsf
"""

import streamlit as st
from sklearn.datasets import load_iris
from sklearn.ensemble import RandomForestClassifier

# Load the Iris dataset
iris = load_iris()
X = iris.data
Y = iris.target

# Set up a Random Forest Classifier
clf = RandomForestClassifier()

# Fit the model
clf.fit(X, Y)

import streamlit as st

# Set the title
st.title("Iris Dataset Analysis")

# Add a header
st.header("Explore the Iris Dataset")

# Set the title
st.title("Iris Flower Classification")

# Add a header
st.header("Enter the Sepal and Petal Measurements")

# Add input fields for sepal length, sepal width, petal length, and petal width
sepal_length = st.slider("Sepal Length", float(X[:, 0].min()), float(X[:, 0].max()), float(X[:, 0].mean()))
sepal_width = st.slider("Sepal Width", float(X[:, 1].min()), float(X[:, 1].max()), float(X[:, 1].mean()))
petal_length = st.slider("Petal Length", float(X[:, 2].min()), float(X[:, 2].max()), float(X[:, 2].mean()))
petal_width = st.slider("Petal Width", float(X[:, 3].min()), float(X[:, 3].max()), float(X[:, 3].mean()))

# Define the prediction button
if st.button("Predict"):
    # Create a new input data point
    input_data = [[sepal_length, sepal_width, petal_length, petal_width]]

    # Fit the classifier and make predictions
    clf.fit(X, Y)
    prediction = clf.predict(input_data)

    # Display the predicted iris species
    species_names = iris.target_names
    predicted_species = species_names[prediction[0]]
    st.write(f"Predicted Iris Species: {predicted_species}")